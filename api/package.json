{
    "name": "celeb_ai_influencer_chatbot_api",
    "version": "1.0.0",
    "description": "AI Influencer Chat Bot Backend which included database, API, API docs",
    "main": "dist/server.js",
    "private": "true",
    "author": "jiakae.tan@arriv.app",
    "license": "ISC",
    "scripts": {
        "prisma:init": "npx prisma init --datasource-provider postgresql",
        "migrate:make": "npx env-cmd --file .env.development npx knex --knexfile src/database/knexfile.ts migrate:make create_country_currency_table",
        "dev:db:migrate": "env-cmd --file .env.development npx knex --knexfile src/database/knexfile.ts migrate:latest",
        "dev:db:seed:make": "env-cmd --file .env.development npx knex --knexfile src/database/knexfile.ts seed:make",
        "dev:db:seed": "env-cmd --file .env.development npx knex --knexfile src/database/knexfile.ts seed:run",
        "dev:build": "npx env-cmd --file .env.development rimraf dist && swc ./src -d dist",
        "dev": "npx env-cmd --file ../.env.development nodemon src/server.ts",
        "dev:swagger": "npx concurrently \"nodemon\" \"nodemon -x tsoa spec\"",
        "dev:prisma:generate": "env-cmd --file .env.development npx prisma generate",
        "dev:start": "env-cmd --file ../.env.development npm run dev:build && node dist/server.js",
        "dev:start:docker:build": "env-cmd --file .env.development npm run dev:build && node dist/server.js",
        "dev:start:docker": "env-cmd --file .env.development node dist/server.js",
        "dev:start:docker:new": "npx env-cmd --file .env.development npm run dev:build && node --inspect=0.0.0.0 dist/server.js",
        "staging:db:migrate": "env-cmd --file .env.staging npx knex --knexfile src/database/knexfile.ts migrate:latest",
        "staging:db:seed": "env-cmd --file .env.staging npx knex --knexfile src/database/knexfile.ts seed:run",
        "staging:build": "npx env-cmd --file .env.staging rimraf dist && swc ./src -d dist",
        "staging": "npx env-cmd --file ../.env.staging nodemon src/server.ts",
        "staging:swagger": "npx concurrently \"nodemon\" \"nodemon -x tsoa spec\"",
        "staging:prisma:generate": "env-cmd --file .env.staging npx prisma generate",
        "staging:start": "env-cmd --file ../.env.staging npm run staging:build && node dist/server.js",
        "staging:start:docker:build": "env-cmd --file .env.staging npm run staging:build && node --inspect=0.0.0.0 dist/server.js",
        "staging:start:docker": "env-cmd --file .env.staging node --inspect=0.0.0.0 dist/server.js",
        "swagger": "tsoa spec",
        "format": "npx prettier --write \"src/**/*.ts\"",
        "format-all": "npx prettier --write .",
        "test": "echo \"Error: no test specified\" && exit 1"
    },
    "keywords": [
        "nodejs",
        "typescript",
        "expressjs",
        "redis",
        "docker",
        "AI",
        "openAI",
        "chatgpt",
        "influencer"
    ],
    "prisma": {
        "schema": "prisma/schema.prisma"
    },
    "devDependencies": {
        "@swc/cli": "^0.1.62",
        "@swc/core": "^1.3.58",
        "@types/axios": "^0.14.0",
        "@types/bcryptjs": "^2.4.2",
        "@types/cors": "^2.8.13",
        "@types/express": "^4.17.17",
        "@types/express-handlebars": "^6.0.0",
        "@types/jsonwebtoken": "^9.0.2",
        "@types/md5": "^2.3.2",
        "@types/morgan": "^1.9.4",
        "@types/node": "^20.2.3",
        "@types/nodemailer": "^6.4.8",
        "@types/papaparse": "^5.3.7",
        "@types/pino": "^7.0.5",
        "@types/pino-pretty": "^5.0.0",
        "@types/redis": "^4.0.11",
        "@types/response-time": "^2.3.5",
        "@types/swagger-jsdoc": "^6.0.1",
        "@types/swagger-ui-express": "^4.1.3",
        "@types/uuid": "^9.0.1",
        "@types/ws": "^8.5.4",
        "@typescript-eslint/eslint-plugin": "^5.59.6",
        "@typescript-eslint/parser": "^5.59.6",
        "concurrently": "^8.0.1",
        "env-cmd": "^10.1.0",
        "eslint": "^8.41.0",
        "eslint-plugin-prettier": "^4.2.1",
        "jest": "^29.5.0",
        "nodemon": "^2.0.22",
        "prisma": "^4.14.1",
        "rimraf": "^5.0.1",
        "ts-node": "^10.9.1",
        "typescript": "^5.0.4"
    },
    "dependencies": {
        "@handlebars/allow-prototype-access": "^1.0.5",
        "@prisma/client": "^4.14.1",
        "@types/multer": "^1.4.7",
        "aws-sdk": "^2.1383.0",
        "axios": "^1.4.0",
        "bcryptjs": "^2.4.3",
        "body-parser": "^1.20.2",
        "cors": "^2.8.5",
        "dayjs": "^1.11.7",
        "dotenv": "^16.0.3",
        "express": "^4.18.2",
        "express-handlebars": "^7.0.7",
        "handlebars": "^4.7.7",
        "joi": "^17.9.2",
        "jsonwebtoken": "^9.0.0",
        "knex": "^2.4.2",
        "knex-paginate": "^3.1.1",
        "md5": "^2.3.0",
        "morgan": "^1.10.0",
        "multer": "^1.4.5-lts.1",
        "nodemailer": "^6.9.3",
        "openai": "^3.2.1",
        "papaparse": "^5.4.1",
        "pg": "^8.11.0",
        "pino": "^8.14.1",
        "pino-pretty": "^10.0.0",
        "prom-client": "^14.2.0",
        "redis": "^4.6.6",
        "response-time": "^2.3.2",
        "swagger-jsdoc": "^6.2.8",
        "swagger-ui-express": "^4.6.3",
        "telegraf": "^4.12.2",
        "tsoa": "^5.1.1",
        "uuid": "^9.0.0",
        "ws": "^8.13.0"
    }
}
